{
  "openapi": "3.0.0",
  "info": {
    "title": "Matrix Flow API",
    "version": "1.0.0",
    "description": "API documentation for Matrix Flow application",
    "contact": {
      "name": "API Support",
      "url": "https://github.com/yourusername/matrix-flow"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3004",
      "description": "Development server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "error": {
            "type": "string",
            "example": "Error message"
          }
        }
      },
      "Success": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object"
          }
        }
      },
      "Matrix": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "projectId": {
            "type": "integer"
          },
          "isSubMatrix": {
            "type": "boolean"
          },
          "config": {
            "type": "object"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "inactive"
            ]
          }
        }
      },
      "Project": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "Trigger": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "nodeId": {
            "type": "integer"
          },
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "config": {
            "type": "object"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "inactive"
            ]
          },
          "lastTriggered": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "apis": [
    "./src/routes/*.ts"
  ],
  "paths": {
    "/api/execute/matrix/{id}": {
      "post": {
        "tags": [
          "Execute"
        ],
        "summary": "Execute a matrix flow",
        "description": "Executes a matrix flow with the given input",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Matrix ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "input": {
                    "type": "object",
                    "description": "Input data for the matrix execution"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Matrix execution started successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "matrixId": {
                      "type": "string"
                    },
                    "input": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Matrix is not active"
          },
          "404": {
            "description": "Matrix not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/matrix": {
      "get": {
        "tags": [
          "Matrix"
        ],
        "summary": "Get all matrices",
        "responses": {
          "200": {
            "description": "List of all matrices",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Matrix"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Matrix"
        ],
        "summary": "Create a new matrix",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "projectId"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "projectId": {
                    "type": "integer"
                  },
                  "isSubMatrix": {
                    "type": "boolean"
                  },
                  "config": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Matrix created successfully"
          }
        }
      }
    },
    "/api/matrix/{id}": {
      "get": {
        "tags": [
          "Matrix"
        ],
        "summary": "Get a matrix by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Matrix details"
          },
          "404": {
            "description": "Matrix not found"
          }
        }
      },
      "put": {
        "tags": [
          "Matrix"
        ],
        "summary": "Update a matrix",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Matrix"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Matrix updated successfully"
          }
        }
      },
      "delete": {
        "tags": [
          "Matrix"
        ],
        "summary": "Delete a matrix",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Matrix deleted successfully"
          }
        }
      }
    },
    "/api/matrix/{id}/nodes": {
      "get": {
        "tags": [
          "Matrix"
        ],
        "summary": "Get all nodes for a matrix",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of nodes for the matrix"
          }
        }
      }
    },
    "/api/matrix/{id}/connections": {
      "get": {
        "tags": [
          "Matrix"
        ],
        "summary": "Get all connections for a matrix",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of connections for the matrix"
          }
        }
      }
    },
    "/api/node-type": {
      "get": {
        "tags": [
          "Node Type"
        ],
        "summary": "Get all available node types",
        "description": "Returns a list of all possible node types in the system",
        "responses": {
          "200": {
            "description": "List of node types",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/project": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get all projects",
        "responses": {
          "200": {
            "description": "List of all projects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Project"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Create a new project",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Project created successfully"
          }
        }
      }
    },
    "/api/project/{id}": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get a project by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Project details"
          }
        }
      },
      "put": {
        "tags": [
          "Project"
        ],
        "summary": "Update a project",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Project updated successfully"
          }
        }
      },
      "delete": {
        "tags": [
          "Project"
        ],
        "summary": "Delete a project",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Project deleted successfully"
          }
        }
      }
    },
    "/api/trigger": {
      "get": {
        "tags": [
          "Trigger"
        ],
        "summary": "Get all triggers",
        "responses": {
          "200": {
            "description": "List of all triggers"
          }
        }
      },
      "post": {
        "tags": [
          "Trigger"
        ],
        "summary": "Create a new trigger",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "nodeId",
                  "type",
                  "name"
                ],
                "properties": {
                  "nodeId": {
                    "type": "integer"
                  },
                  "type": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "config": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Trigger created successfully"
          }
        }
      }
    },
    "/api/trigger/{id}": {
      "get": {
        "tags": [
          "Trigger"
        ],
        "summary": "Get a trigger by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Trigger details"
          }
        }
      },
      "put": {
        "tags": [
          "Trigger"
        ],
        "summary": "Update a trigger",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "config": {
                    "type": "object"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "active",
                      "inactive"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Trigger updated successfully"
          }
        }
      },
      "delete": {
        "tags": [
          "Trigger"
        ],
        "summary": "Delete a trigger",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Trigger deleted successfully"
          }
        }
      }
    }
  },
  "tags": []
}